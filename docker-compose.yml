version: '3.4'

volumes:
  node:
  postgres-volume:

networks:
  app-network:
    name: rest-service-network
    driver: bridge

services:
  postgres:
    container_name: postgres-container
    image: postgres-image
    build: 
      dockerfile: ./postgress/Dockerfile
      context: .
    restart: unless-stopped
    ports: 
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - app-network
    volumes:
      - postgres-volume:/var/lib/postgresql/data

  api:
    container_name: rest-service-container
    image: rest-service-image
    build:
      dockerfile: Dockerfile
      context: .
      target: development
    restart: unless-stopped
    volumes:
      - .:/app
      - node:/app/node_modules
    env_file:
      - .env
    environment:
      POSTGRES_USER: POSTGRES_USER
      POSTGRES_PASSWORD: POSTGRES_PASSWORD
      POSTGRES_DB: POSTGRES_DB
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?schema=public
    command: npm run start:dev
    ports:
      - ${PORT}:${PORT}
    networks:
      - app-network
    depends_on:
      - postgres
